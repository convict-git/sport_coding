#pragma GCC   optimize ("Ofast")
#pragma GCC   optimize ("unroll-loops")
#pragma GCC   target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include      <bits/stdc++.h>
using namespace std;

#define Ios   ios_base::sync_with_stdio(false); cin.tie (nullptr)
#define Prec  cout.precision (10); cout << fixed
#define x     first
#define y     second
#define bg(x) " [ " << #x << " : " << (x) << " ] "
#define un(x) sort(x.begin(), x.end()), \
              x.erase(unique(x.begin(), x.end()), x.end())
using   ll  = long long;
using   ull = unsigned long long;
using   ff  = long double;
using   pii = pair<int,int>;
using   pil = pair<int,ll>;

int main() {
   Ios; Prec;
   int t, n;
   char c;
   int in[50], out[50];
   int dp[50][50];
   cin >> t;
   for (int tc = 1; tc <= t; ++tc) {
      cin >> n;
      for (int i = 0; i < n; ++i) {
         cin >> c;
         c == 'Y' ? in[i] = 1 : in[i] = 0;
      }
      for (int i = 0; i < n; ++i) {
         cin >> c;
         c == 'Y' ? out[i] = 1 : out[i] = 0;
      }
      for (int i = 0; i < n; ++i)
         for (int j = 0; j < n; ++j)
            i == j ? dp[i][j] = 1 : dp[i][j] = 0;
      for (int i = 0; i + 1 < n; ++i) {
         if (out[i] && in[i + 1])
            dp[i][i + 1] = 1;
         if (in[i] && out[i + 1])
            dp[i + 1][i] = 1;
      }
//      cout << "dp initially\n";
//         for (int i = 0; i < n; ++i) {
//            for (int j = 0; j < n; ++j)
//               cout << dp[i][j] << " ";
//            cout << "\n";
//         }
      for (int k = 0; k < n; ++k)
         for (int i = 0; i < n; ++i)
            for (int j = 0; j < n; ++j)
               dp[i][j] = dp[i][j] || (dp[i][k] && dp[k][j]);
      cout << "Case #" << tc << ":\n";
      for (int i = 0; i < n; ++i) {
         for (int j = 0; j < n; ++j)
            dp[i][j] == 1 ? cout << 'Y' : cout << 'N';
         cout << "\n";
      }
   }
   return 0;
}

