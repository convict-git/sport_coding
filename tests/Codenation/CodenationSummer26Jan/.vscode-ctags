!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
IOS	prob1a.cpp	21;"	d	file:
IOS	prob3a.cpp	21;"	d	file:
IOS	prob4a.cpp	21;"	d	file:
IOS	prob4b.cpp	13;"	d	file:
MAX_P	prob1a.cpp	/^const int MAX_P = 2101000;$/;"	v
N	prob3a.cpp	/^const int N = (int)1e3 + 10;$/;"	v
N	prob4a.cpp	/^const int N = 21;$/;"	v
N	prob4b.cpp	/^const int N = 21;$/;"	v
PREC	prob1a.cpp	22;"	d	file:
PREC	prob3a.cpp	22;"	d	file:
PREC	prob4a.cpp	24;"	d	file:
PREC	prob4b.cpp	14;"	d	file:
T	prob4a.cpp	/^vector<vector<int>> T;$/;"	v
X	prob1a.cpp	23;"	d	file:
X	prob3a.cpp	23;"	d	file:
X	prob4a.cpp	27;"	d	file:
X	prob4b.cpp	15;"	d	file:
Y	prob1a.cpp	24;"	d	file:
Y	prob3a.cpp	24;"	d	file:
Y	prob4a.cpp	28;"	d	file:
Y	prob4b.cpp	16;"	d	file:
bg	prob1a.cpp	30;"	d	file:
bg	prob3a.cpp	30;"	d	file:
bg	prob4a.cpp	34;"	d	file:
bg	prob4b.cpp	22;"	d	file:
calc	prob3a.cpp	/^int calc (int i, int j, int last_taken) {$/;"	f
chash	prob1a.cpp	/^struct chash {$/;"	s	file:
chash	prob3a.cpp	/^struct chash {$/;"	s	file:
chash	prob4a.cpp	/^struct chash$/;"	s	file:
chash	prob4b.cpp	/^struct chash {$/;"	s	file:
check	prob4b.cpp	/^int check(int u, int &mask) {$/;"	f
cnt	prob1a.cpp	28;"	d	file:
cnt	prob3a.cpp	28;"	d	file:
cnt	prob4a.cpp	32;"	d	file:
cnt	prob4b.cpp	20;"	d	file:
cntll	prob1a.cpp	29;"	d	file:
cntll	prob3a.cpp	29;"	d	file:
cntll	prob4a.cpp	33;"	d	file:
cntll	prob4b.cpp	21;"	d	file:
d	prob4b.cpp	/^int res[N], vis[N], f[N], d[N];$/;"	v
debug	prob1a.cpp	66;"	d	file:
debug	prob3a.cpp	66;"	d	file:
debug	prob4a.cpp	68;"	d	file:
debug	prob4b.cpp	58;"	d	file:
dfs	prob4a.cpp	/^void dfs(int u) {$/;"	f
dfs	prob4b.cpp	/^void dfs (int u, int &mask) {$/;"	f
dp	prob3a.cpp	/^int dp[N][N][27]; \/\/ starting at i and go max at j with last char as k dp[i][j][k]$/;"	v
dp	prob4a.cpp	/^ll dp[N][N]; \/\/ number of subgraphs with diameter j with root at i as dp[i][j]$/;"	v
err	prob1a.cpp	/^void err(istream_iterator<string> it) {$/;"	f
err	prob1a.cpp	/^void err(istream_iterator<string> it, T a, Args... args) {$/;"	f
err	prob3a.cpp	/^void err(istream_iterator<string> it) {$/;"	f
err	prob3a.cpp	/^void err(istream_iterator<string> it, T a, Args... args) {$/;"	f
err	prob4a.cpp	/^void err(istream_iterator<string> it)$/;"	f
err	prob4a.cpp	/^void err(istream_iterator<string> it, T a, Args... args)$/;"	f
err	prob4b.cpp	/^void err(istream_iterator<string> it) {$/;"	f
err	prob4b.cpp	/^void err(istream_iterator<string> it, T a, Args... args) {$/;"	f
f	prob4b.cpp	/^int res[N], vis[N], f[N], d[N];$/;"	v
fr	prob1a.cpp	26;"	d	file:
fr	prob3a.cpp	26;"	d	file:
fr	prob4a.cpp	30;"	d	file:
fr	prob4b.cpp	18;"	d	file:
g	prob3a.cpp	/^vector <vector <int>> g;$/;"	v
g	prob4b.cpp	/^vector <vector <int>> g;$/;"	v
main	prob1a.cpp	/^signed main() {$/;"	f
main	prob3a.cpp	/^signed main() {$/;"	f
main	prob4a.cpp	/^signed main() {$/;"	f
main	prob4b.cpp	/^signed main() {$/;"	f
mp	prob1a.cpp	/^gp_hash_table <pii, int, chash> mp;$/;"	v
mp	prob3a.cpp	/^gp_hash_table <pii, int, chash> mp;$/;"	v
mp	prob4a.cpp	/^gp_hash_table<pii, int, chash> mp;$/;"	v
mp	prob4b.cpp	/^gp_hash_table <pii, int, chash> mp;$/;"	v
n	prob3a.cpp	/^int n;$/;"	v
n	prob4a.cpp	/^int n;$/;"	v
n	prob4b.cpp	/^int n;$/;"	v
operator ()	prob1a.cpp	/^  int operator () (pii x) const { return x.X*31 + x.Y; }$/;"	f	struct:chash
operator ()	prob3a.cpp	/^  int operator () (pii x) const { return x.X*31 + x.Y; }$/;"	f	struct:chash
operator ()	prob4a.cpp	/^  int operator()(pii x) const { return x.X * 31 + x.Y; }$/;"	f	struct:chash
operator ()	prob4b.cpp	/^  int operator () (pii x) const { return x.X*31 + x.Y; }$/;"	f	struct:chash
ordered_set	prob1a.cpp	/^ordered_set;$/;"	t	file:
ordered_set	prob3a.cpp	/^ordered_set;$/;"	t	file:
ordered_set	prob4a.cpp	/^    ordered_set;$/;"	t	file:
ordered_set	prob4b.cpp	/^ordered_set;$/;"	t	file:
powers	prob1a.cpp	/^vector <int> primes = {2}, powers;$/;"	v
primes	prob1a.cpp	/^vector <int> primes = {2}, powers;$/;"	v
res	prob4b.cpp	/^int res[N], vis[N], f[N], d[N];$/;"	v
root_at	prob4a.cpp	/^void root_at(int u, int pr) {$/;"	f
rv	prob1a.cpp	27;"	d	file:
rv	prob3a.cpp	27;"	d	file:
rv	prob4a.cpp	31;"	d	file:
rv	prob4b.cpp	19;"	d	file:
s	prob3a.cpp	/^string s;$/;"	v
seed	prob1a.cpp	/^auto seed = chrono::high_resolution_clock::now().time_since_epoch().count();$/;"	v
seed	prob3a.cpp	/^auto seed = chrono::high_resolution_clock::now().time_since_epoch().count();$/;"	v
seed	prob4a.cpp	/^auto seed = chrono::high_resolution_clock::now().time_since_epoch().count();$/;"	v
seed	prob4b.cpp	/^auto seed = chrono::high_resolution_clock::now().time_since_epoch().count();$/;"	v
sieve	prob1a.cpp	/^void sieve() {$/;"	f
sz	prob1a.cpp	25;"	d	file:
sz	prob3a.cpp	25;"	d	file:
sz	prob4a.cpp	29;"	d	file:
sz	prob4b.cpp	17;"	d	file:
total_divisors	prob1a.cpp	/^int total_divisors(int n) {$/;"	f
un	prob1a.cpp	31;"	d	file:
un	prob3a.cpp	31;"	d	file:
un	prob4a.cpp	35;"	d	file:
un	prob4b.cpp	23;"	d	file:
vis	prob4a.cpp	/^vector<int> vis;$/;"	v
vis	prob4b.cpp	/^int res[N], vis[N], f[N], d[N];$/;"	v
